helm install teleport-agent-app teleport/teleport-kube-agent \
  --namespace argocd\
  --set roles=app \
  --set proxyAddr=teleport.canvas-playground.site:3080 \
  --set authToken=4ba4a6bbe75de61a060f7c597f58fc47 \
  --set "apps[0].name=argocd" \
  --set "apps[0].uri=https://argocd-server.argocd.svc.cluster.local" \
  --set "apps[0].insecure_skip_verify=true" \
  --set "apps[0].public_addr=argocd.canvas-playground.site" \
  --set "apps[0].labels.env=prod"


kind: role
metadata:
  name: kube-user-viewer
spec:
  allow:
    kubernetes_groups:
    - viewer
    kubernetes_labels:
      env: staging
  deny: {}
  options:
    cert_format: standard
    create_host_user: false
    desktop_clipboard: true
    desktop_directory_sharing: true
    enhanced_recording:
    - command
    - network
    forward_agent: false
    max_session_ttl: 30h0m0s
    pin_source_ip: false
    port_forwarding: true
    record_session:
      default: best_effort
      desktop: true
version: v5


testest123





upstream grafana {
     # server 172.31.14.254:3000 max_fails=1 fail_timeout=30s weight=10;
     server 172.31.10.122:3000 max_fails=1 fail_timeout=30s weight=10;
}

server {
	listen 80;
	listen [::]:80;
	server_name grafna.playground.site;
	return 301 https://$host$request_uri;
}


server {
    #listen 80;
    #listen [::]:80;
    
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    # whitelisted app names for staging
    server_name grafna.playground.site;

    # ssl configurations
    #ssl on;
    ssl_certificate /home/ubuntu/ssl-certificates/grafna.playground.site.chained.crt;
    ssl_certificate_key /home/ubuntu/ssl-certificates/grafna.playground.site.key;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;

    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
    #ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
    ssl_stapling on; # Requires nginx >= 1.3.7
    ssl_stapling_verify on; # Requires nginx => 1.3.7
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
    #add_header X-Frame-Options DENY;
    #add_header X-Content-Type-Options nosniff;

    error_log /var/log/nginx/grafana.err.log debug;
    access_log /var/log/nginx/grafana.access.log main;

    client_max_body_size 10M;
    underscores_in_headers on;

    location / {
        proxy_pass http://grafana;
        proxy_pass_request_headers      on;

        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;

        proxy_http_version 1.1;
    }

}
